#!/usr/bin/env python
# print() - выводит данные в виде текста в консоль
print('Hello World!')
# помощь можно получить вызовом функции help(). В качестве аргумента передается сущность о которой нужна справка
help(print)

# 1.0 МЕТОДЫ СТРОК
# .format(args) | обращение к аргументам через {n}, где n - индекс аргумента (отсчет начинается с 0)
age = 26
name = 'Alex'
res10 = '{1} is {0} years old'.format(age, name)
# print(res10)
# этого же эфекта можно добиться так:
# name + 'is' + str(age) + years old'
# в случае, когда порядок обращения к переменным прямой, указывать индексы не обязательно:
# print('{} times {} has been called'.format(age, name))

# Можно применить format для отображения результата математического выражения. В примере ниже аргументом является
# выражение 1/3 (бесконечная дробь). Результатом будет строка 0.333 . Просиходит обращение к первому аргументу
# и выводится три первые знака после запятой
res11 = '{0: .3}'.format(1/3)
# print(res11)

# или заполнить подчеркиваниями (_) с центровкой текста (^) по ширине 11. !!!Пробел между "{0:" и "_^11}" ставить нельзя
res12 = '{0:_^11}'.format('hello')
# print(res12)

# или заполнить шаблон по ключевым словам
res13 = '{name} has wrote {book}'.format(name='Swaroop', book='A Byte of Python')
# print(res13)

# 2.0 ПЕРЕМЕННЫЕ
i = 5
# print(i)
i = i + 1
# print(i)

s = '''This is a multiline string.
The second line of the multiline string'''
# print(s)

# Запись нескольких логических строк на одной физической (является плохим стилем)
# i = 7; print(i)

# Явное объединение строк возможно с помощью символа \
s = 'It is a string. ' \
    'The string is continuing'
print\
(s)
